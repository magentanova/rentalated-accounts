AWSTemplateFormatVersion: "2010-09-09"
Description: "This Template creates an Amazon SNS topic that can send messages to two Amazon SQS queues with appropriate permissions for one IAM user to publish to the topic and another to read messages from the queues. MySNSTopic is set up to publish to two subscribed endpoints which are two Amazon SQS queues (MyQueue1 and MyQueue2). MyPublishUser is an IAM user that can publish to MySNSTopic using the Publish API. MyTopicPolicy assigns that permission to MyPublishUser. MyQueueUser is an IAM user that can read messages from the two Amazon SQS queues. MyQueuePolicy assigns those permissions to MyQueueUser. It also assigns permission for MySNSTopic to publish its notifications to the two queues. The template creates access keys for the two IAM users with MyPublishUserKey and MyQueueUserKey.  Note that you will be billed for the AWS resources used if you create a stack from this template."
Parameters:
  PublishPassword:
    NoEcho: true
    Type: String
    Description: Password for the IAM user MyPublishUser
    MinLength: 1
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
  SubscribePassword:
    NoEcho: true
    Type: String
    Description: Password for the IAM user MyQueueUser
    MinLength: 1
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
Resources:
  # topic that pushes updates to two SQS queues
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription: 
        - Endpoint: !GetAtt ListingsQueue.Arn
          Protocol: sqs
        - Endpoint: !GetAtt RatingsQueue.Arn
          Protocol: sqs

  # the queues for subscribers
  ListingsQueue:
    Type: AWS::SQS::Queue
  RatingsQueue:
    Type: AWS::SQS::Queue
    
  # IAM for publishing 
  PublishUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref PublishPassword
  PublishUserKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref PublishUser
  PublishTopicGroup:
    Type: AWS::IAM::Group
    Properties:
      Policies:
        - PolicyName: SNSTopicGroupPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref SNSTopic
  AddUserToPublishTopicGroup:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref PublishTopicGroup
      Users:
        - !Ref PublishUser

  # IAM for subscribing
  SubscribeUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref SubscribePassword
  SubscribeUserKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref SubscribeUser
  ReadAndDeleteQueueSubscriberGroup:
    Type: AWS::IAM::Group
    Properties:
      Policies:
        - PolicyName: QueueSubscriberGroupPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sqs:DeleteMessage"
                  - "sqs:ReceiveMessage"
                Resource:
                  - !GetAtt ListingsQueue.Arn
                  - !GetAtt RatingsQueue.Arn
  AddUserToQueueSubscriberGroup: 
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref ReadAndDeleteQueueSubscriberGroup
      Users:
        - !Ref SubscribeUser          
  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:       
      PolicyDocument:
        Version: "2012-10-17"
        Id: SNSFeedQueueSubscriberPolicy
        Statement:
          - Sid: "Allow-SendMessage-To-Both-Queues-From-SNS-Topic"
            Effect: Allow           
            Principal: "*"
            Action:
              - "sqs:SendMessage"
            Resource: "*"
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSTopic
      Queues:
        - !Ref ListingsQueue 
        - !Ref RatingsQueue
Outputs:
  SNSTopicARN:
    Value: !Ref SNSTopic 
  ListingsQueueInfo:
    Value: 
      Fn::Join:
        - " "
        - 
          - "ARN:" 
          - !GetAtt ListingsQueue.Arn
          - "\nURL:"
          - !Ref ListingsQueue
  RatingsQueueInfo:
    Value: 
      Fn::Join:
        - " "
        -
          - "ARN:" 
          - !GetAtt RatingsQueue.Arn
          - "\nURL:"
          - !Ref RatingsQueue
  PublishUserInfo:
    Value:
      Fn::Join:
        - " "
        - 
          - "ARN:"
          - !GetAtt PublishUser.Arn
          - "\nAccess Key"
          - !Ref PublishUserKey
          - "\nSecret Key:"
          - !GetAtt PublishUserKey.SecretAccessKey
  SubscribeUserInfo:
    Value:
      Fn::Join:
        - " "
        - 
          - "ARN:"
          - !GetAtt SubscribeUser.Arn
          - "\nAccess Key"
          - !Ref SubscribeUserKey
          - "\nSecret Key:"
          - !GetAtt SubscribeUserKey.SecretAccessKey
